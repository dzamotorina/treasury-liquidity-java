{"ast":null,"code":"import { gql } from 'apollo-angular';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"apollo-angular\";\nimport * as i2 from \"@angular/forms\";\nfunction OrderFormComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", t_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(t_r1);\n  }\n}\nconst MUT = gql`\nmutation($input: CreateOrderInput!) {\n  createOrder(input: $input) { id term amount createdAt status rateAtSubmission }\n}`;\nexport let OrderFormComponent = /*#__PURE__*/(() => {\n  class OrderFormComponent {\n    constructor(apollo) {\n      this.apollo = apollo;\n      this.terms = ['1M', '1.5M', '2M', '3M', '4M', '6M', '1Y', '2Y', '3Y', '5Y', '7Y', '10Y', '20Y', '30Y'];\n      this.term = '2Y';\n      this.amount = 1000000;\n      this.msg = '';\n    }\n    submit() {\n      this.msg = '';\n      this.apollo.mutate({\n        mutation: MUT,\n        variables: {\n          input: {\n            term: this.term,\n            amount: this.amount\n          }\n        },\n        refetchQueries: ['OrdersQuery']\n      }).subscribe({\n        next: () => this.msg = '✅ Order submitted',\n        error: err => this.msg = err.message\n      });\n    }\n    static {\n      this.ɵfac = function OrderFormComponent_Factory(t) {\n        return new (t || OrderFormComponent)(i0.ɵɵdirectiveInject(i1.Apollo));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: OrderFormComponent,\n        selectors: [[\"app-order-form\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 12,\n        vars: 4,\n        consts: [[3, \"ngSubmit\"], [\"name\", \"term\", 3, \"ngModelChange\", \"ngModel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"amount\", \"type\", \"number\", \"min\", \"1\", \"step\", \"1000\", \"placeholder\", \"1000000\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"], [1, \"muted\"], [3, \"value\"]],\n        template: function OrderFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function OrderFormComponent_Template_form_ngSubmit_0_listener() {\n              return ctx.submit();\n            });\n            i0.ɵɵelementStart(1, \"label\");\n            i0.ɵɵtext(2, \"Term \");\n            i0.ɵɵelementStart(3, \"select\", 1);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function OrderFormComponent_Template_select_ngModelChange_3_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.term, $event) || (ctx.term = $event);\n              return $event;\n            });\n            i0.ɵɵtemplate(4, OrderFormComponent_option_4_Template, 2, 2, \"option\", 2);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"label\");\n            i0.ɵɵtext(6, \"Amount (USD) \");\n            i0.ɵɵelementStart(7, \"input\", 3);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function OrderFormComponent_Template_input_ngModelChange_7_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.amount, $event) || (ctx.amount = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"button\", 4);\n            i0.ɵɵtext(9, \"Place Order\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"div\", 5);\n            i0.ɵɵtext(11);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.term);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.terms);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.amount);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx.msg);\n          }\n        },\n        dependencies: [FormsModule, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MinValidator, i2.NgModel, i2.NgForm],\n        encapsulation: 2\n      });\n    }\n  }\n  return OrderFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}