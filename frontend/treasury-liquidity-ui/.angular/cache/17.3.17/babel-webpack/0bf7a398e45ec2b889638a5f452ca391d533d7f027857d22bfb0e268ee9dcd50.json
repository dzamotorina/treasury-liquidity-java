{"ast":null,"code":"import { NgIf, NgFor } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.yieldError);\n  }\n}\nfunction AppComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Loading yield curve...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_8_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const point_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", point_r2.term, \": \", point_r2.rate, \"% \");\n  }\n}\nfunction AppComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3, \"Current U.S. Treasury Yield Curve:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 16);\n    i0.ɵɵtemplate(5, AppComponent_div_8_span_5_Template, 2, 2, \"span\", 17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.yieldData);\n  }\n}\nfunction AppComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const point_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", point_r3.term, \": \", point_r3.rate, \"% \");\n  }\n}\nfunction AppComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", t_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(t_r4);\n  }\n}\nfunction AppComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" No orders yet \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_table_36_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 24);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 24);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 24);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const order_r5 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.formatDate(order_r5.createdAt));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r5.term);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.formatAmount(order_r5.amount));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", order_r5.rateAtSubmission ? order_r5.rateAtSubmission.toFixed(2) + \"%\" : \"\\u2014\", \" \");\n  }\n}\nfunction AppComponent_table_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 21)(1, \"thead\")(2, \"tr\", 22)(3, \"th\", 23);\n    i0.ɵɵtext(4, \"When\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 23);\n    i0.ɵɵtext(6, \"Term\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 23);\n    i0.ɵɵtext(8, \"Amount\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 23);\n    i0.ɵɵtext(10, \"Yield at Submission\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, AppComponent_table_36_tr_12_Template, 9, 4, \"tr\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.orders);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(http, cdr) {\n      this.http = http;\n      this.cdr = cdr;\n      this.yieldData = [];\n      this.yieldError = '';\n      this.orders = [];\n      this.orderMessage = '';\n      this.terms = ['1M', '2M', '3M', '6M', '1Y', '2Y', '3Y', '5Y', '7Y', '10Y', '20Y', '30Y'];\n      this.selectedTerm = '2Y';\n      this.orderAmount = 1000000;\n    }\n    ngOnInit() {\n      console.log('AppComponent ngOnInit called');\n      this.loadYieldCurve();\n      this.loadOrders();\n      // Refresh orders every 10 seconds\n      setInterval(() => this.loadOrders(), 10000);\n    }\n    loadYieldCurve() {\n      console.log('loadYieldCurve() called'); // Add debug\n      const query = {\n        query: 'query { yieldCurve { term rate } }'\n      };\n      this.http.post('http://localhost:8080/graphql', query).subscribe({\n        next: response => {\n          console.log('Yield curve response:', response); // Add debug\n          this.yieldData = response.data.yieldCurve;\n          console.log('yieldData assigned:', this.yieldData);\n          console.log('yieldData length:', this.yieldData.length);\n          this.cdr.detectChanges(); // Force change detection\n        },\n        error: err => {\n          console.error('Yield curve error:', err);\n          this.yieldError = 'Failed to load yield curve data';\n        }\n      });\n    }\n    loadOrders() {\n      const query = {\n        query: 'query { orders { id term amount createdAt rateAtSubmission } }'\n      };\n      this.http.post('http://localhost:8080/graphql', query).subscribe({\n        next: response => this.orders = response.data.orders.reverse(),\n        error: err => console.error('Failed to load orders:', err)\n      });\n    }\n    submitOrder() {\n      this.orderMessage = 'Submitting order...';\n      const mutation = {\n        query: `mutation { createOrder(input: { term: \"${this.selectedTerm}\", amount: ${this.orderAmount} }) { id term amount createdAt rateAtSubmission } }`\n      };\n      this.http.post('http://localhost:8080/graphql', mutation).subscribe({\n        next: response => {\n          this.orderMessage = '✅ Order submitted successfully';\n          setTimeout(() => this.orderMessage = '', 3000);\n          this.loadOrders(); // Refresh orders\n        },\n        error: err => this.orderMessage = '❌ Failed to submit order'\n      });\n    }\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleString();\n    }\n    formatAmount(amount) {\n      return new Intl.NumberFormat().format(amount);\n    }\n    static {\n      this.ɵfac = function AppComponent_Factory(t) {\n        return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AppComponent,\n        selectors: [[\"app-root\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 37,\n        vars: 12,\n        consts: [[2, \"padding\", \"20px\", \"font-family\", \"Arial, sans-serif\"], [2, \"border\", \"1px solid #ccc\", \"padding\", \"15px\", \"margin\", \"20px 0\", \"border-radius\", \"5px\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [4, \"ngIf\"], [2, \"border\", \"2px solid red\", \"padding\", \"10px\", \"margin\", \"10px 0\"], [4, \"ngFor\", \"ngForOf\"], [2, \"display\", \"flex\", \"gap\", \"15px\", \"align-items\", \"end\", 3, \"ngSubmit\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [\"name\", \"term\", 2, \"padding\", \"5px\", \"margin-top\", \"5px\", 3, \"ngModelChange\", \"ngModel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"amount\", \"type\", \"number\", \"min\", \"1\", \"step\", \"1000\", \"placeholder\", \"1000000\", 2, \"padding\", \"5px\", \"margin-top\", \"5px\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 2, \"padding\", \"8px 16px\", \"background\", \"#007bff\", \"color\", \"white\", \"border\", \"none\", \"border-radius\", \"3px\"], [2, \"margin-top\", \"10px\", \"color\", \"#666\"], [\"style\", \"text-align: center; color: #666; padding: 20px;\", 4, \"ngIf\"], [\"style\", \"width: 100%; border-collapse: collapse;\", 4, \"ngIf\"], [2, \"color\", \"red\"], [2, \"display\", \"flex\", \"flex-wrap\", \"wrap\", \"gap\", \"10px\"], [\"style\", \"background: #f0f0f0; padding: 5px 10px; border-radius: 3px;\", 4, \"ngFor\", \"ngForOf\"], [2, \"background\", \"#f0f0f0\", \"padding\", \"5px 10px\", \"border-radius\", \"3px\"], [3, \"value\"], [2, \"text-align\", \"center\", \"color\", \"#666\", \"padding\", \"20px\"], [2, \"width\", \"100%\", \"border-collapse\", \"collapse\"], [2, \"background-color\", \"#f5f5f5\"], [2, \"border\", \"1px solid #ccc\", \"padding\", \"8px\", \"text-align\", \"left\"], [2, \"border\", \"1px solid #ccc\", \"padding\", \"8px\"]],\n        template: function AppComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n            i0.ɵɵtext(2, \"\\uD83C\\uDFE6 Treasury Liquidity Desk\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 1)(4, \"h2\");\n            i0.ɵɵtext(5, \"Yield Curve\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(6, AppComponent_div_6_Template, 2, 1, \"div\", 2)(7, AppComponent_div_7_Template, 2, 0, \"div\", 3)(8, AppComponent_div_8_Template, 6, 1, \"div\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 4)(10, \"h3\");\n            i0.ɵɵtext(11, \"DEBUG: Yield Data\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"p\");\n            i0.ɵɵtext(13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"p\");\n            i0.ɵɵtext(15);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(16, AppComponent_div_16_Template, 2, 2, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"div\", 1)(18, \"h2\");\n            i0.ɵɵtext(19, \"Submit Order\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"form\", 6);\n            i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_20_listener() {\n              return ctx.submitOrder();\n            });\n            i0.ɵɵelementStart(21, \"label\", 7);\n            i0.ɵɵtext(22, \" Term: \");\n            i0.ɵɵelementStart(23, \"select\", 8);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AppComponent_Template_select_ngModelChange_23_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.selectedTerm, $event) || (ctx.selectedTerm = $event);\n              return $event;\n            });\n            i0.ɵɵtemplate(24, AppComponent_option_24_Template, 2, 2, \"option\", 9);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(25, \"label\", 7);\n            i0.ɵɵtext(26, \" Amount (USD): \");\n            i0.ɵɵelementStart(27, \"input\", 10);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_27_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.orderAmount, $event) || (ctx.orderAmount = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(28, \"button\", 11);\n            i0.ɵɵtext(29, \" Place Order \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(30, \"div\", 12);\n            i0.ɵɵtext(31);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(32, \"div\", 1)(33, \"h2\");\n            i0.ɵɵtext(34, \"Order History\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(35, AppComponent_div_35_Template, 2, 0, \"div\", 13)(36, AppComponent_table_36_Template, 13, 1, \"table\", 14);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngIf\", ctx.yieldError);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.yieldError && (ctx.yieldData == null ? null : ctx.yieldData.length) === 0);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yieldData && ctx.yieldData.length > 0);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\"yieldData length: \", ctx.yieldData.length, \"\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\"yieldError: \", ctx.yieldError, \"\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.yieldData);\n            i0.ɵɵadvance(7);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedTerm);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.terms);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.orderAmount);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx.orderMessage);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ctx.orders.length === 0);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.orders.length > 0);\n          }\n        },\n        dependencies: [NgIf, NgFor, FormsModule, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MinValidator, i2.NgModel, i2.NgForm],\n        encapsulation: 2\n      });\n    }\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}