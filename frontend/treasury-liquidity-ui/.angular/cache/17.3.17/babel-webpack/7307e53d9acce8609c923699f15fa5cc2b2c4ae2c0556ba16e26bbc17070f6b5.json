{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { gql } from 'apollo-angular';\nimport { NgIf } from '@angular/common';\nimport { BaseChartDirective } from 'ng2-charts';\nconst QUERY = gql`query { yieldCurve { term rate } }`;\nlet YieldCurveComponent = class YieldCurveComponent {\n  constructor(apollo) {\n    this.apollo = apollo;\n    this.chartData = {\n      labels: [],\n      datasets: [{\n        data: [],\n        label: 'Par Yield (%)',\n        tension: 0.25,\n        pointRadius: 3\n      }]\n    };\n    this.chartOptions = {\n      responsive: true,\n      scales: {\n        y: {\n          title: {\n            display: true,\n            text: 'Yield (%)'\n          }\n        },\n        x: {\n          title: {\n            display: true,\n            text: 'Maturity'\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    };\n  }\n  ngOnInit() {\n    this.apollo.watchQuery({\n      query: QUERY\n    }).valueChanges.subscribe(({\n      data,\n      errors\n    }) => {\n      if (errors && errors.length) {\n        this.error = errors[0].message;\n        return;\n      }\n      const pts = data.yieldCurve;\n      this.chartData = {\n        labels: pts.map(p => p.term),\n        datasets: [{\n          data: pts.map(p => p.rate),\n          label: 'Par Yield (%)',\n          tension: 0.25,\n          pointRadius: 3\n        }]\n      };\n    });\n  }\n};\nYieldCurveComponent = __decorate([Component({\n  selector: 'app-yield-curve',\n  standalone: true,\n  imports: [NgIf, BaseChartDirective],\n  template: `\n    <h2>Yield Curve</h2>\n    <canvas baseChart\n      [data]=\"chartData\"\n      [type]=\"'line'\"\n      [options]=\"chartOptions\">\n    </canvas>\n    <div class=\"muted\" *ngIf=\"error\">{{error}}</div>\n  `\n})], YieldCurveComponent);\nexport { YieldCurveComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}